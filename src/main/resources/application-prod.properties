# ===============================
# Banco de Dados (Datasource)
# ===============================
# spring.datasource.username=
# spring.datasource.password=

# ===============================
# Flyway (Migração de Banco)
# ===============================
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# ===============================
# Jackson (Serialização JSON)
# ===============================
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

# ===============================
# Armazenamento de Arquivos
# ===============================
# Tipo de armazenamento (local ou s3)
deliveryfood.storage.tipo=S3

# Armazenamento S3 (Amazon)
deliveryfood.storage.s3.id-chave-acesso=${S3_ID_CHAVE_ACESSO}
deliveryfood.storage.s3.chave-acesso-secreta=${S3_ID_CHAVE_ACESSO_SECRETA}
deliveryfood.storage.s3.bucket=${S3_BUCKET}
deliveryfood.storage.s3.regiao=${S3_REGIAO}
deliveryfood.storage.s3.diretorio-fotos=${S3_DIRETORIO_FOTOS}

# ===============================
# E-mail
# ===============================
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

# Configurações do remetente
deliveryfood.email.remetente=${EMAIL_REMETENTE}
deliveryfood.email.impl=sandbox
deliveryfood.email.sandbox.destinatario=${EMAIL_REMETENTE}

# ===============================
# FreeMarker
# ===============================
spring.freemarker.settings.locale=pt_br

# ===============================
# URLs Públicas da Aplicação
# ===============================
# URL base usada para expor a aplicação externamente (via proxy reverso ou gateway)
# Altere esta única propriedade ao mudar de ambiente (dev, staging, prod)
deliveryfood.api.public-url=http://127.0.0.1:80

# JWT e Keystore
# deliveryfood.jwt.keystore.jks-location=
# deliveryfood.jwt.keystore.password=
# deliveryfood.jwt.keystore.keypair-alias=

# OAuth2 Provider
deliveryfood.auth.provider-url=${deliveryfood.api.public-url}

# Opaque Token - introspecção
# spring.security.oauth2.resourceserver.opaque-token.introspection-uri=${deliveryfood.api.public-url}/oauth2/introspect
spring.security.oauth2.resourceserver.opaque-token.introspection-uri=http://deliveryfood-api:8080/oauth2/introspect
spring.security.oauth2.resourceserver.opaque-token.client-id=deliveryfood-backend
spring.security.oauth2.resourceserver.opaque-token.client-secret=backend123

# JWT Resource Server
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${deliveryfood.api.public-url}/oauth2/jwks
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://deliveryfood-api:8080/oauth2/jwks

# ===============================
# Swagger / SpringDoc
# ===============================
springdoc.packages-to-scan=com.deliveryfood.api
springdoc.paths-to-exclude=/hostcheck
springdoc.paths-to-match=/v1/**

# URLs do fluxo OAuth2
springdoc.oAuthFlow.authorizationUrl=${deliveryfood.api.public-url}/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=${deliveryfood.api.public-url}/oauth2/token

# Autopreenchimento do Swagger UI
springdoc.swagger-ui.oauth.client-id=deliveryfood-web
springdoc.swagger-ui.oauth.client-secret=web123
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true

# URL base usada pelo Swagger UI para realizar chamadas à API.
springdoc.swagger-ui.server-url=http://127.0.0.1

# ===============================
# Logging
# ===============================
# logging.loggly.token=${LOGGLY_TOKEN}

# ===============================
# Servidor (Tomcat / Embutido)
# ===============================
server.compression.enabled=true
