
# ===============================
# Banco de Dados (Datasource)
# ===============================
spring.datasource.username=
spring.datasource.password=

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.show-sql=true

# ===============================
# Flyway (Migração de Banco)
# ===============================
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# ===============================
# Armazenamento de Arquivos
# ===============================
# Tipo de armazenamento (local ou s3)
deliveryfood.storage.tipo=local

# Armazenamento local
deliveryfood.storage.local.diretorio-fotos=

# Armazenamento S3 (Amazon)
deliveryfood.storage.s3.id-chave-acesso=
deliveryfood.storage.s3.chave-acesso-secreta=
deliveryfood.storage.s3.bucket=
deliveryfood.storage.s3.regiao=
deliveryfood.storage.s3.diretorio-fotos=

# ===============================
# E-mail
# ===============================
spring.mail.host=
# spring.mail.port=
spring.mail.username=
spring.mail.password=
spring.mail.protocol=
spring.mail.default-encoding=

# Configurações do remetente
deliveryfood.email.remetente=
deliveryfood.email.impl=
deliveryfood.email.sandbox.destinatario=

# ===============================
# URLs Públicas da Aplicação
# ===============================
# URL base usada para expor a aplicação externamente (via proxy reverso ou gateway)
# Altere esta única propriedade ao mudar de ambiente (dev, staging, prod)
deliveryfood.api.public-url=

# ===============================
# Segurança / Login
# ===============================
spring.security.user.name=teste
spring.security.user.password=123

# JWT e Keystore
deliveryfood.jwt.keystore.jks-location=
deliveryfood.jwt.keystore.password=
deliveryfood.jwt.keystore.keypair-alias=

# OAuth2 Provider
deliveryfood.auth.provider-url=

# Opaque Token - introspecção
spring.security.oauth2.resourceserver.opaque-token.introspection-uri=
spring.security.oauth2.resourceserver.opaque-token.client-id=
spring.security.oauth2.resourceserver.opaque-token.client-secret=

# JWT Resource Server
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${deliveryfood.api.public-url}/oauth2/jwks
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=

# ===============================
# Swagger / SpringDoc
# ===============================
springdoc.packages-to-scan=com.deliveryfood.api
springdoc.paths-to-exclude=/hostcheck
springdoc.paths-to-match=/v1/**

# URLs do fluxo OAuth2
springdoc.oAuthFlow.authorizationUrl=${deliveryfood.api.public-url}/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=${deliveryfood.api.public-url}/oauth2/token

# Autopreenchimento do Swagger UI
springdoc.swagger-ui.oauth.client-id=deliveryfood-web
springdoc.swagger-ui.oauth.client-secret=web123
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true

# URL base usada pelo Swagger UI para realizar chamadas à API.
springdoc.swagger-ui.server-url=

# ===============================
# Logging
# ===============================
logging.loggly.token=
# logging.level.org.springframework=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.web=DEBUG
