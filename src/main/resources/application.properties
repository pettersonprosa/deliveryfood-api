# ===============================
# Perfil Ativo
# ===============================
spring.profiles.active=dev

# ===============================
# Informações da Aplicação
# ===============================
spring.application.name=deliveryfood

# ===============================
# Banco de Dados (Datasource)
# ===============================
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/deliveryfood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

# Configurações do pool de conexões Hikari
## Máximo de conexões no pool:
spring.datasource.hikari.maximum-pool-size=10
## Mínimo de conexões inativas:
spring.datasource.hikari.minimum-idle=10
# Tempo máximo inativo (ms):
spring.datasource.hikari.idle-timeout=600000

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.show-sql=true

# Geração de scripts DDL (desativado por padrão)
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

# ===============================
# Flyway (Migração de Banco)
# ===============================
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# ===============================
# Jackson (Serialização JSON)
# ===============================
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

# ===============================
# Upload de Arquivos
# ===============================
#spring.servlet.multipart.max-file-size=20KB       # Tamanho máximo de um único arquivo
#spring.servlet.multipart.max-request-size=20MB    # Tamanho total da requisição

# ===============================
# Armazenamento de Arquivos
# ===============================
# Tipo de armazenamento (local ou s3)
deliveryfood.storage.tipo=local

# Armazenamento local
deliveryfood.storage.local.diretorio-fotos=/home/ptt/Pictures/catalogo

# Armazenamento S3 (Amazon)
deliveryfood.storage.s3.id-chave-acesso=${S3_ID_CHAVE_ACESSO}
deliveryfood.storage.s3.chave-acesso-secreta=${S3_ID_CHAVE_ACESSO_SECRETA}
deliveryfood.storage.s3.bucket=${S3_BUCKET}
deliveryfood.storage.s3.regiao=${S3_REGIAO}
deliveryfood.storage.s3.diretorio-fotos=${S3_DIRETORIO_FOTOS}

# ===============================
# E-mail
# ===============================
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

# Configurações do remetente
deliveryfood.email.remetente=${EMAIL_REMETENTE}
deliveryfood.email.impl=sandbox
deliveryfood.email.sandbox.destinatario=${EMAIL_REMETENTE}

# ===============================
# FreeMarker
# ===============================
spring.freemarker.settings.locale=pt_br

# ===============================
# URLs Públicas da Aplicação
# ===============================
# URL base usada para expor a aplicação externamente (via proxy reverso ou gateway)
# Altere esta única propriedade ao mudar de ambiente (dev, staging, prod)
deliveryfood.api.public-url=http://127.0.0.1:80

# ===============================
# Segurança / Login
# ===============================
spring.security.user.name=teste
spring.security.user.password=123

# JWT e Keystore
deliveryfood.jwt.keystore.jks-location=base64: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
deliveryfood.jwt.keystore.password=123456
deliveryfood.jwt.keystore.keypair-alias=deliveryfood

# OAuth2 Provider
deliveryfood.auth.provider-url=${deliveryfood.api.public-url}

# Opaque Token - introspecção
spring.security.oauth2.resourceserver.opaque-token.introspection-uri=${deliveryfood.api.public-url}/oauth2/introspect
spring.security.oauth2.resourceserver.opaque-token.client-id=deliveryfood-backend
spring.security.oauth2.resourceserver.opaque-token.client-secret=backend123

# JWT Resource Server
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${deliveryfood.api.public-url}/oauth2/jwks

# ===============================
# Swagger / SpringDoc
# ===============================
springdoc.packages-to-scan=com.deliveryfood.api
springdoc.paths-to-exclude=/hostcheck
springdoc.paths-to-match=/v1/**

# URLs do fluxo OAuth2
springdoc.oAuthFlow.authorizationUrl=${deliveryfood.api.public-url}/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=${deliveryfood.api.public-url}/oauth2/token

# Autopreenchimento do Swagger UI
springdoc.swagger-ui.oauth.client-id=deliveryfood-web
springdoc.swagger-ui.oauth.client-secret=web123
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true

# ===============================
# Logging
# ===============================
logging.loggly.token=${LOGGLY_TOKEN}
# logging.level.org.springframework=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.web=DEBUG

# ===============================
# Servidor (Tomcat / Embutido)
# ===============================
server.compression.enabled=true
