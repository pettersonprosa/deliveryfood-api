spring.profiles.active=dev

spring.application.name=deliveryfood
spring.datasource.url=jdbc:mysql://localhost:3306/deliveryfood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=bdSenha

spring.jpa.show-sql=true

# Número máximo de conexões que o pool pode conter ao mesmo tempo:
spring.datasource.hikari.maximum-pool-size=10
# Número mínimo de conexões inativas (não em uso) que devem estar disponíveis no pool:
spring.datasource.hikari.minimum-idle=10
# Tempo máximo (em milissegundos) que uma conexão pode ficar ociosa antes de ser removida do pool:
spring.datasource.hikari.idle-timeout=600000

# Cria o esquema com base nas entidades JPA, gerando os comandos DDL (Data Definition Language) necessários.:
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
# Define o arquivo de destino onde o script DDL será salvo.
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# Configura o Jackson para falhar ao deserializar JSON que contenha propriedades desconhecidas:
spring.jackson.deserialization.fail-on-unknown-properties=true
# Configura o Jackson para falhar ao deserializar JSON que contenha propriedades explicitamente ignoradas (@JsonIgnore):
spring.jackson.deserialization.fail-on-ignored-properties=true

# Define o tamanho máximo permitido para um único arquivo enviado via requisição multipart (upload).
# Valor padrão: 1MB
# spring.servlet.multipart.max-file-size=20KB

# Define o tamanho máximo permitido para toda a requisição multipart, incluindo vários arquivos.
# Valor padrão: 10MB
# spring.servlet.multipart.max-request-size=20MB

deliveryfood.storage.local.diretorio-fotos=/home/ptt/Pictures/catalogo

deliveryfood.storage.s3.id-chave-acesso=${S3_ID_CHAVE_ACESSO}
deliveryfood.storage.s3.chave-acesso-secreta=${S3_ID_CHAVE_ACESSO_SECRETA}
deliveryfood.storage.s3.bucket=${S3_BUCKET}
deliveryfood.storage.s3.regiao=${S3_REGIAO}
deliveryfood.storage.s3.diretorio-fotos=${S3_DIRETORIO_FOTOS}

# local ou s3
deliveryfood.storage.tipo=local

#Email
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.default-encoding=UTF-8

deliveryfood.email.remetente=${EMAIL_REMETENTE}

spring.freemarker.settings.locale=pt_br
deliveryfood.email.impl=sandbox
deliveryfood.email.sandbox.destinatario=${EMAIL_REMETENTE}

# Habilita a compressão de respostas HTTP no servidor para reduzir o tamanho dos dados transferidos.
# Isso melhora o desempenho e reduz a utilização de banda.
server.compression.enabled=true

logging.loggly.token=${LOGGLY_TOKEN}

# login
spring.security.user.name=teste
spring.security.user.password=123

# logging.level.org.springframework=DEBUG